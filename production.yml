networks:
  web:
    external: true
  internal:
    external: false

volumes:
  production_postgres_data: { }
  production_postgres_data_backups: { }

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: laid_out_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
      - ./.envs/.production/.allauth
    command: /start
    networks:
      - internal
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laid-out-django.rule=Host(`laid-out.org`)"
      - "traefik.http.routers.laid-out-django.entrypoints=web-secure"
      - "traefik.http.routers.laid-out-django.tls.certresolver=letsencrypt"
      - "traefik.http.services.laid-out-django.loadbalancer.server.port=8000"
      - "traefik.http.routers.laid-out-django.tls.options=default"
      - "traefik.http.routers.laid-out-django.tls.certresolver.letsencrypt.acme.email=your-app-specific-email@laid-out.org"


  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: laid_out_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    networks:
      - internal

  redis:
    image: redis:6
    networks:
      - internal

  celeryworker:
    <<: *django
    image: laid_out_production_celeryworker
    command: /start-celeryworker
    networks:
      - internal

  celerybeat:
    <<: *django
    image: laid_out_production_celerybeat
    command: /start-celerybeat
    networks:
      - internal

  flower:
    <<: *django
    image: laid_out_production_flower
    command: /start-flower
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laid-out-flower.rule=Host(`laid-out.org`)"
      - "traefik.http.routers.laid-out-flower.entrypoints=web-secure"
      - "traefik.http.routers.laid-out-flower.tls.certresolver=letsencrypt"
      - "traefik.http.services.laid-out-flower.loadbalancer.server.port=5555"
      - "traefik.http.routers.laid-out-flower.service=laid-out-flower"
      # Add a port number to access flower
      - "traefik.http.services.laid-out-flower.loadbalancer.server.port=5555"
    networks:
      - web
      - default


  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z
    networks:
      - internal
